name: Setup OIDC

on:
  workflow_call:
    inputs:
      aws_account_id:
        description: "AWS Account ID"
        required: true
        type: string
      aws_region:
        description: "AWS Region"
        required: true
        type: string
      role_name:
        description: "IAM Role name to create or update"
        required: true
        type: string
      repo_names:
        description: "Lista de repos autorizados para usar OIDC (ej: org/repo1,org/repo2)"
        required: true
        type: string
      actions:
        description: "Acciones de AWS permitidas para la policy. Ejemplo: ec2:*,s3:*"
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  setup-oidc:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout del repo que llama, por si lo necesitamos
      - name: Checkout caller repo
        uses: actions/checkout@v4

      # 2. Clonar repo reusable donde vive Terraform
      - name: Checkout reusable workflows repo
        uses: actions/checkout@v4
        with:
          repository: pulidovpe/reusable-workflows
          ref: main
          path: reusable-workflows

      # 3. Configurar Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      # 4. Inicializar Terraform
      - name: Terraform Init
        run: terraform init
        working-directory: reusable-workflows/terraform/oidc

      # 5. Ejecutar Terraform Apply con variables din√°micas
      - name: Terraform Apply
        run: |
          terraform apply -auto-approve -input=false \
            -var="aws_account_id=${{ inputs.aws_account_id }}" \
            -var="aws_region=${{ inputs.aws_region }}" \
            -var="role_name=${{ inputs.role_name }}" \
            -var='repo_names=${{ inputs.repo_names }}' \
            -var='actions=${{ inputs.actions }}'
        working-directory: reusable-workflows/terraform/oidc
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ inputs.aws_region }}
